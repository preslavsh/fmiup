int периметър, обем, лице на фигура
all in function

int if+else по-голямо, по-малко 
void + pointers размяна на стойностите
void напишете със символи буква с о-та
пример H
0   0
0   0
00000
0   0
0   0
void loop Разделяне на число на цифри
int loop 1+x/1! + x2/2!....xn/n!
int реалзиране на скобка х задача, реално oт double чрез floor към int
int + if решаване на квадратно уравнение
void loop обръщане на число наобратно
int loop array сума на елементи ( с масив)
void loop да се напише програма която изкарва 
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5
1 2 3 4 5 6
1 2 3 4 5 6 7

int изрази: a + b*c - a2b3c4 а*b/c + c/a*b
bool if+else определяне дали точка е в окръжност(фигура)
int loop array умножение на елементи ( с и без масив)
void loop да се напише програма която изкарва
      1
     12
    123
   1234
  12345
 123456
1234567


50 проверка дали редица е растяща/намаляваща
51 да се намерят всички прости делители на дадено число
52 Да се напише програма, която въвежда последователно n
числа, след което ги извежда в обратен ред.
53 търсене в масив на елемент
55 да се намери колко пъти се намира число р редица
56 да се намери най-голямата под редица
57 сортировки (bubble, selection, gnome, insertion sort)
58 сливане на редици(а и b масив да слеят) 
59 Да се напише програма, която въвежда елементите на
правоъгълна матрица a[nxм] и намира и извежда матрицата, получена от
дадената като всеки от нейните елементи е увеличен с 1.
60 bfs, dfs в масив
61 Да се напише програмен фрагмент,който обхожда кватратната матрица a[nxn] по диагонали, започвайки от елемента a n-1,0 ,
62 обхождане на матрица по редове, колони, спираловидно
63 умножение на матрици
64 лексикографски равни стрингове
65 да се провери дали масива се състои от различни елементи
66 да се провери колко различни елемента има в масив
67 Да се напише програма, която въвежда две числови редици,
сортира ги във възходящ ред, слива ги и извежда получената редица.
68 Да се напише програма, която въвежда квадратна матрица от цели числа,
след което я извежда като увеличава всеки от елементите на матрицата над главния диагонал с 5 и намалява всеки от
елементите под главния диагонал с 5.
69 функциите за char[] написани - пример конкатенация
72 Да се напише програма, която пресмята следния израз:
sum (-1^i*x^2i+1/(2i+1)!)
x е променлива от тип float, която да се въвежда от клавиатурата.
Намирането на n ! да бъде реализирано в отделна рекурсивна функция, която да се
извиква при пресмятането на израза. За вдигането на степен да се използва функцията pow.
73 Да се намери сумата от квадратите на цифрите на числото 546810781. Да се напише
функция с return тип bool, чрез която да се провери дали получената сума е просто
число. В конзолата да се изкара сумата, 1 ако сумата е просто число или 0 ако не е, и
цифрите на сумата в обратен ред.
74 Даден е следният масив с елементи от тип int: {4, 6,8,5, 2} . Да се намери
средногеометричната стойност на елементите на масива, като изчислението да се
извърши в отделна функция с return тип void, на която се подава масивът и резултатът
да се върне чрез параметър на тази функция. Резултатът да се изкара в конзолата от
main функцията. За намиране на корен пети да се използва функцията pow.
75 Дадени са два масива int arr1[5] = {4,6,8,5,2} и int arr2[5] = {3,1,0,12,7}. Да се напише
функция с return тип void, на която подаваме двата масива и връщаме резултата от
следната сума sum(arr1[i]*arr2[arr1[i]%5])
76 сума от кодовете на низ
78 Дадени са два масива с елементи от тип int и фиксиран размер, дефинирани в
main функцията: {10,5,1,3,666} и {7,2,3,5,777}. Двата масива да се подадат на
функция, написана от вас, с подходящо име и return тип - void, която пресмята
сумата от произведението на съответните елементи на двата масива и резултатът
да се връща чрез параметър на функцията. След това резултатът да се принтира в
конзолата от main функцията (а не от функцията, създадена от вас).

recursion
1 рекурсивно фибоначи, факториел, евклид, рекурсивна степен
2 flood fill
3 Да се напише рекурсивна функция, която пресмята сумата от остатъците от
деление на 3 и на 5 по следната формула:
при x = 0, return 0
при x четно x%3 + P(x-1)
при x нечетно x%5 + P(x-1);
4 бинарно търсене
